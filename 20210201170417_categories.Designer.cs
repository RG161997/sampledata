// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using Sample.Data;

namespace Sample.Migrations
{
    [DbContext(typeof(CreatingDatabase))]
    [Migration("20210201170417_categories")]
    partial class categories
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "2.1.14-servicing-32113")
                .HasAnnotation("Relational:MaxIdentifierLength", 128)
                .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

            modelBuilder.Entity("Sample.Models.Categories", b =>
                {
                    b.Property<int>("categoryId")
                        .ValueGeneratedOnAdd()
                        .HasColumnName("categoryId")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Population")
                        .IsRequired()
                        .HasColumnName("description")
                        .HasMaxLength(100);

                    b.Property<string>("categoryName")
                        .IsRequired()
                        .HasColumnName("categoryName")
                        .HasMaxLength(50);

                    b.Property<string>("picture")
                        .IsRequired()
                        .HasColumnName("picture")
                        .HasMaxLength(100);

                    b.HasKey("categoryId");

                    b.ToTable("Categories");
                });

            modelBuilder.Entity("Sample.Models.Customers", b =>
                {
                    b.Property<int>("customerId")
                        .ValueGeneratedOnAdd()
                        .HasColumnName("customerId")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Address")
                        .IsRequired()
                        .HasColumnName("Address")
                        .HasMaxLength(100);

                    b.Property<string>("city")
                        .IsRequired()
                        .HasColumnName("city")
                        .HasMaxLength(100);

                    b.Property<string>("companyName")
                        .IsRequired()
                        .HasColumnName("companyName")
                        .HasMaxLength(50);

                    b.Property<string>("contactName")
                        .IsRequired()
                        .HasColumnName("contactName")
                        .HasMaxLength(50);

                    b.Property<string>("contactTitle")
                        .IsRequired()
                        .HasColumnName("contactTitle")
                        .HasMaxLength(50);

                    b.Property<string>("country")
                        .IsRequired()
                        .HasColumnName("country")
                        .HasMaxLength(100);

                    b.Property<int>("fax")
                        .HasColumnName("fax");

                    b.Property<int>("phone")
                        .HasColumnName("phone");

                    b.Property<int>("postalCode")
                        .HasColumnName("postalCode");

                    b.Property<string>("region")
                        .IsRequired()
                        .HasColumnName("region")
                        .HasMaxLength(100);

                    b.HasKey("customerId");

                    b.ToTable("Customers");
                });

            modelBuilder.Entity("Sample.Models.Employees", b =>
                {
                    b.Property<int>("employeeID")
                        .ValueGeneratedOnAdd()
                        .HasColumnName("employeeId")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Address")
                        .IsRequired()
                        .HasColumnName("Address")
                        .HasMaxLength(100);

                    b.Property<DateTime>("birthDate")
                        .HasColumnName("birthDate");

                    b.Property<string>("city")
                        .IsRequired()
                        .HasColumnName("city")
                        .HasMaxLength(100);

                    b.Property<string>("country")
                        .IsRequired()
                        .HasColumnName("country")
                        .HasMaxLength(100);

                    b.Property<int>("extension")
                        .HasColumnName("extension");

                    b.Property<string>("firstName")
                        .IsRequired()
                        .HasColumnName("firstName")
                        .HasMaxLength(50);

                    b.Property<DateTime>("hireDate")
                        .HasColumnName("hireDate");

                    b.Property<int>("homePhone")
                        .HasColumnName("homePhone");

                    b.Property<string>("lastName")
                        .IsRequired()
                        .HasColumnName("lastName")
                        .HasMaxLength(50);

                    b.Property<string>("notes")
                        .HasColumnName("notes")
                        .HasMaxLength(500);

                    b.Property<string>("photo")
                        .HasColumnName("photo")
                        .HasMaxLength(500);

                    b.Property<string>("photoPath")
                        .HasColumnName("photoPath")
                        .HasMaxLength(200);

                    b.Property<int>("postalCode")
                        .HasColumnName("postalCode");

                    b.Property<string>("region")
                        .IsRequired()
                        .HasColumnName("region")
                        .HasMaxLength(100);

                    b.Property<int>("reportsTo")
                        .HasColumnName("reportsTo");

                    b.Property<string>("title")
                        .IsRequired()
                        .HasColumnName("title")
                        .HasMaxLength(50);

                    b.Property<string>("titleOfCOurtesy")
                        .IsRequired()
                        .HasColumnName("titleOfCourtesy")
                        .HasMaxLength(50);

                    b.HasKey("employeeID");

                    b.ToTable("Employees");
                });

            modelBuilder.Entity("Sample.Models.Orders", b =>
                {
                    b.Property<int>("orderId")
                        .ValueGeneratedOnAdd()
                        .HasColumnName("orderId")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int?>("customerId");

                    b.Property<int?>("employeeId");

                    b.Property<string>("freigth")
                        .HasColumnName("freight")
                        .HasMaxLength(50);

                    b.Property<DateTime>("orderDate")
                        .HasColumnName("orderDate");

                    b.Property<DateTime>("requiredDate")
                        .HasColumnName("requiredDate");

                    b.Property<string>("shipAddress")
                        .IsRequired()
                        .HasColumnName("shipAddress")
                        .HasMaxLength(100);

                    b.Property<string>("shipCity")
                        .IsRequired()
                        .HasColumnName("shipCity")
                        .HasMaxLength(100);

                    b.Property<string>("shipCountry")
                        .IsRequired()
                        .HasColumnName("shipCountry")
                        .HasMaxLength(100);

                    b.Property<string>("shipName")
                        .HasColumnName("shipName")
                        .HasMaxLength(50);

                    b.Property<int>("shipPostalCode")
                        .HasColumnName("shipPostalCode");

                    b.Property<string>("shipRegion")
                        .IsRequired()
                        .HasColumnName("shipRegion")
                        .HasMaxLength(100);

                    b.Property<string>("shipVia")
                        .HasColumnName("shipVia")
                        .HasMaxLength(100);

                    b.Property<DateTime>("shippedDate")
                        .HasColumnName("shippedDate");

                    b.HasKey("orderId");

                    b.HasIndex("customerId");

                    b.HasIndex("employeeId");

                    b.ToTable("Orders");
                });

            modelBuilder.Entity("Sample.Models.Products", b =>
                {
                    b.Property<int>("productId")
                        .ValueGeneratedOnAdd()
                        .HasColumnName("productId")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int?>("categoryId");

                    b.Property<string>("discontinued")
                        .HasColumnName("discontinued")
                        .HasMaxLength(20);

                    b.Property<string>("productName")
                        .IsRequired()
                        .HasColumnName("productName")
                        .HasMaxLength(100);

                    b.Property<int>("quantitPerLabel")
                        .HasColumnName("quantityPerLabel");

                    b.Property<int>("reorderLevel")
                        .HasColumnName("reorderLevel");

                    b.Property<int?>("supplierID");

                    b.Property<int>("unitPrice")
                        .HasColumnName("unitPrice");

                    b.Property<int>("unitsInStock")
                        .HasColumnName("unitsInStock");

                    b.Property<int>("unitsOnOrder")
                        .HasColumnName("unitsOnOrder");

                    b.HasKey("productId");

                    b.HasIndex("categoryId");

                    b.HasIndex("supplierID");

                    b.ToTable("Products");
                });

            modelBuilder.Entity("Sample.Models.Region", b =>
                {
                    b.Property<int>("regionId")
                        .ValueGeneratedOnAdd()
                        .HasColumnName("regionId")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("regionDescription")
                        .IsRequired()
                        .HasColumnName("regionDescription")
                        .HasMaxLength(100);

                    b.HasKey("regionId");

                    b.ToTable("Regions");
                });

            modelBuilder.Entity("Sample.Models.Shippers", b =>
                {
                    b.Property<int>("shipperId")
                        .ValueGeneratedOnAdd()
                        .HasColumnName("shipperId")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("companyName")
                        .IsRequired()
                        .HasColumnName("companyName")
                        .HasMaxLength(50);

                    b.Property<int>("phone")
                        .HasColumnName("phone");

                    b.HasKey("shipperId");

                    b.ToTable("Shippers");
                });

            modelBuilder.Entity("Sample.Models.Suppliers", b =>
                {
                    b.Property<int>("supplierId")
                        .ValueGeneratedOnAdd()
                        .HasColumnName("supplierId")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Address")
                        .IsRequired()
                        .HasColumnName("Address")
                        .HasMaxLength(100);

                    b.Property<string>("city")
                        .IsRequired()
                        .HasColumnName("city")
                        .HasMaxLength(100);

                    b.Property<string>("companyName")
                        .IsRequired()
                        .HasColumnName("companyName")
                        .HasMaxLength(50);

                    b.Property<string>("contactName")
                        .IsRequired()
                        .HasColumnName("contactName")
                        .HasMaxLength(50);

                    b.Property<string>("contactTitle")
                        .IsRequired()
                        .HasColumnName("contactTitle")
                        .HasMaxLength(50);

                    b.Property<string>("country")
                        .IsRequired()
                        .HasColumnName("country")
                        .HasMaxLength(100);

                    b.Property<int>("fax")
                        .HasColumnName("fax");

                    b.Property<string>("homepage")
                        .IsRequired()
                        .HasColumnName("homepage")
                        .HasMaxLength(100);

                    b.Property<int>("phone")
                        .HasColumnName("phone");

                    b.Property<int>("postalCode")
                        .HasColumnName("postalCode");

                    b.Property<string>("region")
                        .IsRequired()
                        .HasColumnName("region")
                        .HasMaxLength(100);

                    b.HasKey("supplierId");

                    b.ToTable("Suppliers");
                });

            modelBuilder.Entity("Sample.Models.Territories", b =>
                {
                    b.Property<int>("territoryId")
                        .ValueGeneratedOnAdd()
                        .HasColumnName("territoryId")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int?>("regionId");

                    b.Property<string>("territoryDescription")
                        .IsRequired()
                        .HasColumnName("territoryDescription")
                        .HasMaxLength(100);

                    b.HasKey("territoryId");

                    b.HasIndex("regionId");

                    b.ToTable("Territories");
                });

            modelBuilder.Entity("Sample.Models.Orders", b =>
                {
                    b.HasOne("Sample.Models.Customers", "Customers")
                        .WithMany()
                        .HasForeignKey("customerId");

                    b.HasOne("Sample.Models.Employees", "Employees")
                        .WithMany()
                        .HasForeignKey("employeeId");
                });

            modelBuilder.Entity("Sample.Models.Products", b =>
                {
                    b.HasOne("Sample.Models.Categories", "Categories")
                        .WithMany()
                        .HasForeignKey("categoryId");

                    b.HasOne("Sample.Models.Suppliers", "Suppliers")
                        .WithMany()
                        .HasForeignKey("supplierID");
                });

            modelBuilder.Entity("Sample.Models.Territories", b =>
                {
                    b.HasOne("Sample.Models.Region", "Region")
                        .WithMany()
                        .HasForeignKey("regionId");
                });
#pragma warning restore 612, 618
        }
    }
}
